[tool:pytest]
# E2Eテスト用のpytest設定

# テストディスカバリー
testpaths = tests/e2e
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# マーカー定義
markers =
    e2e: エンドツーエンドテスト
    user_journey: ユーザージャーニーテスト（A1-A4）
    system_operation: システム稼働テスト（B1-B3）
    failure_recovery: 障害復旧テスト（C1-C3）
    performance: パフォーマンステスト（D1-D3）
    real_api: 実際のRadiko APIを使用するテスト
    contract: API契約テスト
    slow: 長時間実行テスト（5分以上）
    resource_intensive: リソース集約テスト
    network_dependent: ネットワーク依存テスト
    large_dataset: 大量データテスト
    recovery: 障害復旧テスト

# テスト実行設定
addopts = 
    -v
    --strict-markers
    --tb=short
    --maxfail=5
    --timeout=3600
    --cov=src
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml
    --html=reports/e2e_report.html
    --self-contained-html
    --junit-xml=reports/junit.xml

# ログ設定
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = logs/e2e_tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 警告設定
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:urllib3.*

# 並列実行設定
# -n auto でCPUコア数に基づく並列実行
# --dist worksteal で効率的なテスト分散

# タイムアウト設定
timeout = 3600  # 1時間でテストタイムアウト

# 最小Python版本
minversion = 3.8